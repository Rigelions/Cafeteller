name: Deploy to App Engine on merge
'on':
  push:
    branches:
      - main
      - develop

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          submodules: "recursive"

      - name: Use Node.js 20.10.0 # Specify Node.js version if needed
        uses: actions/setup-node@v3
        with:
          node-version: '20.10.0 '
          cache: 'yarn' # This caches node_modules based on your lockfile

      - name: Write Admin Service Account
        env:
          SERVICE_ACCOUNT_JSON: ${{ secrets.ADMIN_SERVICE_ACCOUNT }}
          SERVICE_ACCOUNT_JSON_DEV: ${{ secrets.ADMIN_SERVICE_ACCOUNT_DEV }}
        run: |
          mkdir server
          echo "$SERVICE_ACCOUNT_JSON" >> server/serviceAccountKey.json
          echo "$SERVICE_ACCOUNT_JSON_DEV" >> server/serviceAccountKey-Dev.json

      - name: Disallow Bot (develop)
        if: github.ref == 'refs/heads/develop'
        run: |
          echo "User-agent: *" > public/robots.txt
          echo "Disallow: /" >> public/robots.txt


      - name: Write .env file (main)
        if: github.ref == 'refs/heads/main'
        run: |
          echo "${{ secrets.ENV_PROD }}" >> .env
          echo "NEXT_PUBLIC_GIT_COMMIT=${{ github.sha }}" >> .env

      - name: Write .env file (develop)
        if: github.ref == 'refs/heads/develop'
        run: |
          echo "${{ secrets.ENV_DEV }}" >> .env
          echo "NEXT_PUBLIC_GIT_COMMIT=${{ github.sha }}" >> .env
          
      # Step 3: Build Docker image
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-2

      - name: Log in to Amazon ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build Docker image
        run: |
          docker build -t cafeteller/app:latest .

      # Step 4: Push Docker image to Amazon ECR
      - name: Tag Docker image
        run: |
          docker tag cafeteller/app:latest ${{ steps.ecr-login.outputs.registry }}/cafeteller/app:latest

      - name: Push Docker image to Amazon ECR
        run: |
          docker push ${{ steps.ecr-login.outputs.registry }}/cafeteller/app:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: "recursive"


      - uses: 'google-github-actions/auth@v2'
        if: github.ref == 'refs/heads/main'
        with:
          credentials_json: ${{ secrets.SERVICE_ACCOUNT_PROD }}

      - name: Deploy to App Engine (main)
        if: github.ref == 'refs/heads/main'
        uses: google-github-actions/deploy-appengine@v2
        with:
          deliverables: app.yaml
          project_id: cafeteller-f18b8

      - uses: 'google-github-actions/auth@v2'
        if: github.ref == 'refs/heads/develop'
        with:
          credentials_json: ${{ secrets.SERVICE_ACCOUNT_DEV }}

      - name: Deploy to Cloud Compute (develop)
        if: github.ref == 'refs/heads/develop'
        uses: 'google-github-actions/ssh-compute@v1'
        with:
          instance_name: 'app'
          zone: 'us-central1-a'
          command: |
            docker pull 207567761428.dkr.ecr.ap-southeast-2.amazonaws.com/cafeteller/app:latest
            docker stop app || true
            docker rm app || true
            docker run -d -p 80:80 --name app 207567761428.dkr.ecr.ap-southeast-2.amazonaws.com/cafeteller/app:latest